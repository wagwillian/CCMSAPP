@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<EditForm Model="model" OnValidSubmit="ExecuteLogIn" class="">


    <div class="row">
        <div class="col-auto">            
            <InputText id="email" class="form-control" @bind-Value="model.Email" placeholder="Email Adress" />
         </div>

         <div class="col-auto">            
            <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" placeholder="Senha" />
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-2">Entrar</button>
        </div>
    </div>
    
    

</EditForm>

@code {
    private AuthenticationUserModel model = new();

    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogIn()
    {
        showAuthenticationError = false;

        var result = await AuthService.Login(model);

        if(result is not null)
        {
            NavManager.NavigateTo("/");   
        }

        else
        {
            authenticationErrorText = "Ocorreu um erro ao tentar fazer o login.";
            showAuthenticationError = true;
        }
    }
}
